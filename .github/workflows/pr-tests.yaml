name: PR tests
on:
  workflow_call:
    inputs:
      runs-on-value:
        required: true
        type: string
      comment-id:
        required: true
        type: number
    secrets:
      S3_ACCESS_KEY:
        required: false
      S3_SECRET_NAME:
        required: false
      YA_YT_TOKEN:
        required: false

env:
  ACTIONS_ALLOW_USE_UNSECURE_NODE_VERSION: true

jobs:
  notify-pr-tests-start:
    runs-on: trampoline
    needs: 
      - integration-test
    steps:
      - name: Notify PR
        uses: actions/github-script@v7
        env:
          PULL_REQUEST_NUMBER: ${{ github.event.pull_request.number }}
        with:
          script: |
            const current_time = new Date().toLocaleString("ru-RU");
            const message = 'Integration tests are started.';
            const comment = await github.rest.issues.getComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: ${{ inputs.comment-id }}
            });
            const comment_body = comment.data.body;
            const new_comment_body = comment_body + '\n' + current_time + ' ' + message;
            await github.rest.issues.updateComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: ${{ inputs.comment-id }},
              body: new_comment_body
            });

  check:
    runs-on: ${{ inputs.runs-on-value }}
    steps:
      # - name: Unittests
      #   shell: bash
      #   run: |
      #     cp ./ytsaurus/yt/yt/scripts/run_unittests.sh ../build_cmake_release
      #     ln -s $(pwd)/../build_cmake_release $(pwd)/../build
      #     cd ../build
      #     ./run_unittests.sh

      - name: Prepare pytest environment
        shell: bash
        run: |
          ytsaurus/yt/yt/scripts/prepare_pytest_environment.sh

      # - name: Integration tests
      #   shell: bash
      #   run: |
      #     ytsaurus/yt/yt/scripts/run_integration_tests.sh

      # - name: Python tests
      #   shell: bash
      #   run: |
      #     ytsaurus/yt/yt/scripts/run_python_tests.sh

      # - name: Odin tests
      #   shell: bash
      #   run: |
      #     ytsaurus/yt/odin/tests/run_tests.sh

  integration-test:
    runs-on: ${{ inputs.runs-on-value }}
    env:
      YA_YT_TOKEN: ${{ secrets.YA_YT_TOKEN }}
      YT_TOKEN: ${{ secrets.YA_YT_TOKEN }}
    steps:
      - name: Prepare directories
        run: |
          mkdir ${{ github.run_id }}
          mkdir ${{ github.run_id }}/dump_directory
          mkdir ${{ github.run_id }}/test_results

      - name: Configure s3cmd
        run: |
          python3.11 -m venv ~/venv_s3cmd
          source ~/venv_s3cmd/bin/activate
          pip3 install s3cmd
          echo [default] > ~/.s3cfg
          echo access_key = ${{ secrets.S3_ACCESS_KEY }} >> ~/.s3cfg
          echo secret_key = ${{ secrets.S3_SECRET_NAME }} >> ~/.s3cfg
          echo bucket_location = ru-central1 >> ~/.s3cfg
          echo host_base = storage.yandexcloud.net >> ~/.s3cfg
          echo host_bucket = %\(bucket\)s.storage.yandexcloud.net >> ~/.s3cfg
          echo "S3 dumping enabled"

      - name: Calculate variables
        id: vars
        run: | 
          TEST_FLAGS="-A -r --run-tagged-tests-on-yt --ytexec-bin /actions-runner/_work/ytsaurus/ytsaurus/ytsaurus/.github/scripts/ytexec --build-results-report=results-report.json"
          TEST_FLAGS="${TEST_FLAGS} --yt-dir=//home/devtools/tmp-cache --yt-proxy=${{ vars.CI_YT_PROXY }} --yt-store --yt-store-threads 8"
          echo "TEST_FLAGS=$TEST_FLAGS" >> $GITHUB_OUTPUT

      - name: Run size_s tests
        run: |
          pwd

          mkdir ~/.yt || true
          echo ${YT_TOKEN} > ~/.yt/token

          TEST_FLAGS="${{ steps.vars.outputs.TEST_FLAGS }}"
          TEST_FLAGS="${TEST_FLAGS} --output ${{ github.run_id }}/test_results/size_s -F *test_dynamic_tables.py::TestDynamicTablesWithAbandoningLeaderLeaseDuringRecovery*"
          ../ytsaurus/ytsaurus/ya make ${TEST_FLAGS} ../ytsaurus/ytsaurus/yt/yt/tests/integration/size_s || true

      - name: Dump test results
        run: |
          source ~/venv_s3cmd/bin/activate
          python3 ../ytsaurus/ytsaurus/.github/scripts/dump_test_results.py -i ${{ github.run_id }}/test_results/size_s/ -o ${{ github.run_id }}/dump_directory/size_s
          s3cmd put --recursive ${{ github.run_id }}/dump_directory/ s3://githubci/autotests/${{ github.run_id }}/

  notify-pr-tests-end:
    runs-on: trampoline
    needs: 
      - integration-test
    steps:
      - name: Notify PR
        uses: actions/github-script@v7
        env:
          PULL_REQUEST_NUMBER: ${{ github.event.pull_request.number }}
        with:
          script: |
            const current_time = new Date().toLocaleString("ru-RU");
            const message = 'Integration tests are finished. Check the results [here](https://storage.yandexcloud.net/githubci/autotests/${{ github.run_id }}/size_s/index.html)';
            const comment = await github.rest.issues.getComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: ${{ inputs.comment-id }}
            });
            const comment_body = comment.data.body;
            const new_comment_body = comment_body + '\n' + current_time + ' ' + message;
            await github.rest.issues.updateComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: ${{ inputs.comment-id }},
              body: new_comment_body
            });
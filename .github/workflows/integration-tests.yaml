name: Integration tests
on:
  workflow_call:
    inputs:
      runs-on-value:
        required: true
        type: string
    secrets:
      S3_ACCESS_KEY:
        required: false
      S3_SECRET_NAME:
        required: false
      YA_YT_TOKEN:
        required: false

jobs:
  check:
    runs-on: ${{ inputs.runs-on-value }}
    env:
      YA_YT_TOKEN: ${{ secrets.YA_YT_TOKEN }}
      YT_TOKEN: ${{ secrets.YA_YT_TOKEN }}
    steps:
      - name: Prepare directories
        run: |
          sudo rm -r integration_tests || true
          mkdir integration_tests
          mkdir integration_tests/dump_directory
          mkdir integration_tests/test_results

      - name: Configure S3CMD
        run: |
          if [[ -z ${{ secrets.S3_ACCESS_KEY }} ]]
          then
            echo "S3 dumping disabled"
          else
            python3.11 -m venv ~/venv_s3cmd
            source ~/venv_s3cmd/bin/activate
            pip3 install s3cmd
            echo [default] > ~/.s3cfg
            echo access_key = ${{ secrets.S3_ACCESS_KEY }} >> ~/.s3cfg
            echo secret_key = ${{ secrets.S3_SECRET_NAME }} >> ~/.s3cfg
            echo bucket_location = ru-central1 >> ~/.s3cfg
            echo host_base = storage.yandexcloud.net >> ~/.s3cfg
            echo host_bucket = %\(bucket\)s.storage.yandexcloud.net >> ~/.s3cfg
          fi

      - name: test-dump
        run: |
          source ~/venv_s3cmd/bin/activate
          touch integration_tests/test
          s3cmd put --recursive integration_tests s3://githubci/prod/

      - name: Calculate variables
        id: vars
        run: | 
          TEST_FLAGS="-A -r --run-tagged-tests-on-yt --ytexec-bin /actions-runner/_work/ytsaurus/ytsaurus/ytsaurus/.github/scripts/ytexec --build-results-report=results-report.json"
          TEST_FLAGS="${TEST_FLAGS} --yt-dir=//home/devtools/tmp-cache --yt-proxy=${{ vars.CI_YT_PROXY }} --yt-store --yt-store-threads 8"
          echo "TEST_FLAGS=$TEST_FLAGS" >> $GITHUB_OUTPUT

      - name: Run size_s tests
        run: |
          pwd

          mkdir ~/.yt || true
          echo ${YT_TOKEN} > ~/.yt/token

          TEST_FLAGS="${{ steps.vars.outputs.TEST_FLAGS }}"
          TEST_FLAGS="${TEST_FLAGS} --output integration_tests/test_results/size_s -F *test_dynamic_tables.py*"
          ../ytsaurus/ytsaurus/ya make ${TEST_FLAGS} ../ytsaurus/ytsaurus/yt/yt/tests/integration/size_s

      # - name: Dump test results
      #   run: |
      #     source ~/venv_s3cmd/bin/activate
      #     python3 ../ytsaurus/ytsaurus/.github/scripts/dump_test_results.py -i integration_tests/test_results/size_s/ -o integration_tests/dump_directory/size_s

          